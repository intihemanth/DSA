#SEGMENTED SIEVE
import math as m
def generate_sieve(n):
    #p=10000001
    primes=[1]*(1000001)
    primes[0],primes[1]=0,0
    i=2
    while i*i<10000001:
        if primes[i]:
            for _ in range(i*i,1000001,i):
                primes[_]=0
        i+=1
    #print(primes)
    return primes[0:n]

def gen_primes(n):
    l=[]
    r=generate_sieve(n)
    for i in range(len(r)):
        if r[i]:
            l.append(i)
    return l
    


l,r=map(int,input().split())
h=gen_primes(int(m.sqrt(r)+1))
op=[1]*(r-l+1)
for i in h:
    fn=0
    if (l//i)*i<l:
        fn=((l//i)+1)*i
    else:
        fn=(l//i)*i

    for j in range(fn,r+1,i):
        op[j-l]=0
for i in range(r-l+1):
    if op[i]:
        print(l+i,end=" ")
        
