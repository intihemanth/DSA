#Binary Search

#Brute force

li=[int(i) for i in input().split()]
tar=int(input())
s=0
e=len(li)-1
m=(s+e)>>1
sta=False
while s<=e:
    if li[m]==tar:
        sta=True
        break
    if li[m]>tar:
        e=m-1
        m=(s+e)>>1
    else:
        s=m+1
        m=(s+e)>>1
if sta:
    print("Target Found")
else:
    print("Target Not Found")

# Using Functions
def Is_present(ar,t):
    s=0
    e=len(ar)-1
    m=(s+e)>>1
    while s<=e:
        if li[m]==tar:
            return True
        if li[m]>tar:
            e=m-1
            m=(s+e)>>1
        else:
            s=m+1
            m=(s+e)>>1
    return False


li=[int(i) for i in input().split()]
tar=int(input())
if Is_present(li,tar):
    print("Target Found")
else:
    print("Target Not Found")


#Left to Right index of a target
def l_index(ar,tar):
    s=0
    e=len(ar)-1
    while s<=e:
        m=(s+e)>>1
        if ar[m]>=tar:
            e=m-1
            continue
        else:
            s=m+1
    return s  
        
def h_index(ar,tar):
    s=0
    e=len(ar)-1
    while s<=e:
        m=(s+e)>>1
        if ar[m]==tar:
            s=m+1
            continue
        else:
            e=m-1
       
    return e
    

li=[int(i) for i in input().split()]
tar=int(input())
li.sort()
x=l_index(li,tar)
y=h_index(li,tar)
print(x,y)
